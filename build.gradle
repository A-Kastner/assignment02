apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'antlr'

repositories {
    mavenCentral()
}

dependencies {

    // https://mvnrepository.com/artifact/org.antlr/antlr4-runtime
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.1'
    antlr "org.antlr:antlr4:4.7.1"
    // https://mvnrepository.com/artifact/com.github.javaparser/javaparser-core
    implementation group: 'com.github.javaparser', name: 'javaparser-core', version: '3.8.0'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'


    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
}

// generate java from the ANTLR g4 files
generateGrammarSource {
    arguments = ['-visitor', '-package', 'org.softlang']
    outputDirectory = file("${project.buildDir}/generated-src/main/java/")
}

generateGrammarSource << {
    copy {
        from "${project.buildDir}/generated-src/main/java/"
        into "src/generated/java"
    }
}

compileJava.dependsOn generateGrammarSource
compileJava {
    source = ['build/generated-src/main/java', 'src/main/java']
}

task removeGeneratedSource(type: Delete) {
    delete 'src/generated/'
}
clean.dependsOn removeGeneratedSource

// mark the generated source as such for IntelliJ IDEA
sourceSets.main.java.srcDirs += file("src/generated/java")
idea {
    module {
        generatedSourceDirs += file('src/generated/java')
    }
}
